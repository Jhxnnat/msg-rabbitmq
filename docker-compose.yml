services:
  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbit
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: adminpass
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5

  postgres:
    image: postgres:13
    hostname: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: adminpass
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d db"]
      interval: 5s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer
    ports:
      - "8080:8080"
    depends_on:
      - postgres

  producer:
    build:
      context: ./producers
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

  consumer:
    build:
      context: ./consumers
    depends_on:
      - rabbitmq
      - postgres
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1

volumes:
  rabbitmq_data:
  postgres_data:
